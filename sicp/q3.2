(define (make-monitored func)
    (let ((counter 0))
        (lambda (n)
            (cond ((eq? n 'how-many-calls) counter)
                  ((eq? n 'reset-counter) (begin (set! counter 0) 0))
                  (else (begin (set! counter (+ counter 1)) (func n)))
            )
        )
    )
)

(define sqrt (make-monitored sqrt))
(sqrt 100)
(sqrt 1)
(sqrt 'how-many-calls)
(sqrt 'reset-counter)
(sqrt 'how-many-calls)
